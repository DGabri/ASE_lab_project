openapi: 3.0.3
info:
  title: Chess Heroes
  description: Dcumentation for the chess heroes platform. Port 3000 is for user gateway, 3001 for admin gateway.
  version: 1.0.0
servers:
  - url: https://localhost:3000
    description: Users Gateway
  - url: https://localhost:3001
    description: Admin Gateway
    
paths:
  /create_user:
    post:
      tags: ['Auth']
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the new user.
                email:
                  type: string
                  format: email
                  description: The email of the new user.
                password:
                  type: string
                  description: The password of the new user.
                user_type:
                  type: integer
                  description: The type of user being created.
              required:
                - username
                - email
                - password
                - user_type
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: string
                  id:
                    type: integer
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /token:
    post:
      tags: ['Auth']
      summary: Login and get access tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                password:
                  type: string
                  description: The password of the user.
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      user_type:
                        type: integer
                      role:
                        type: string
        '400':
          description: Missing credentials.
        '401':
          description: Authentication failed.
        '500':
          description: Internal server error.

  /logout/{player_id}:
    post:
      tags: ['Auth']
      summary: Logout a user
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the user to logout.
      responses:
        '200':
          description: User logged out successfully.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.

  /refresh:
    post:
      tags: ['Auth']
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: The refresh token.
              required:
                - refresh_token
      responses:
        '200':
          description: Token refreshed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
        '400':
          description: Missing or invalid refresh token.
        '500':
          description: Internal server error.

  /delete_user/{player_id}:
    delete:
      tags: ['Auth']
      summary: Delete a user
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the user to delete.
      responses:
        '200':
          description: User deleted successfully.
        '404':
          description: User not found or error from user service.
        '500':
          description: Internal server error.

  /authorize:
    post:
      tags: ['Auth']
      summary: Authorize user access to a route
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The JWT access token.
                route:
                  type: string
                  description: The route being accessed.
                method:
                  type: string
                  description: The HTTP method being used.
              required:
                - token
                - route
                - method
      responses:
        '200':
          description: User authorized successfully.
        '400':
          description: Missing or invalid data.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Route not found.
        '500':
          description: Internal server error.

  /user/modify/{user_id}:
    put:
      tags: ['Auth']
      summary: Modify user username
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the user being modified.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The new username.
              required:
                - username
      responses:
        '200':
          description: Username modified successfully.
        '400':
          description: Missing or invalid data.
        '500':
          description: Internal server error.

  /introspect:
    post:
      tags: ['Auth']
      summary: Verify token and user identity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user being verified.
              required:
                - user_id
      responses:
        '200':
          description: User token valid.
        '400':
          description: Missing or invalid data.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.

  /userinfo:
    get:
      tags: ['Auth']
      summary: Get user information
      responses:
        '200':
          description: User information retrieved successfully.
        '401':
          description: Unauthorized or invalid token.
        '500':
          description: Internal server error.
          
  /create_user (user service):
    post:
      tags: ['User']
      summary: Create a new player account in the user microservice.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the player.
                email:
                  type: string
                  format: email
                  description: The email of the player.
                user_id:
                  type: integer
                  description: The unique identifier for the user.
              required:
                - username
                - email
                - user_id
      responses:
        201:
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: string
                  id:
                    type: integer
        400:
          description: Missing or invalid fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        409:
          description: Conflict - user already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /player/{player_id}:
    get:
      tags: ['User']
      summary: Get specific player information
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the player
      responses:
        '200':
          description: Successfully retrieved player information
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_info:
                    type: object
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
    delete:
      summary: Delete a player account.
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the player to delete.
      responses:
        200:
          description: Player deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: string
        400:
          description: Missing player ID or other errors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

    put:
      summary: Update a player's username.
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the player to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The new username for the player.
              required:
                - username
      responses:
        200:
          description: Player updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Missing or invalid fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        401:
          description: Missing authorization header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /player/collection/{player_id}:
    get:
      tags: ['User']
      summary: Retrieve a player's collection.
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the player whose collection is retrieved.
      responses:
        200:
          description: Collection retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: string
                  collection:
                    type: array
                    items:
                      type: object
        400:
          description: Error retrieving collection.
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
                    
  /player/gold/{player_id}:
    put:
      tags: ['User']
      summary: Update player's gold balance
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier of the player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - is_refill
              properties:
                amount:
                  type: number
                  description: Amount to increment/decrement the gold balance
                is_refill:
                  type: boolean
                  description: Indicates if this is a refill transaction
      responses:
        '200':
          description: Successfully updated gold balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully updated player gold
                  player_id:
                    type: integer
                  new_balance:
                    type: number
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: string
                    example: Error updating balance, balance required

  /auction/complete:
    post:
      tags: ['User']
      summary: Complete an auction and process the outcome
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - winner_id
                - gacha_id
                - winning_bid
                - losing_bids
              properties:
                winner_id:
                  type: integer
                  description: ID of the winning player
                gacha_id:
                  type: integer
                  description: ID of the gacha item being auctioned
                winning_bid:
                  type: number
                  description: The winning bid amount
                losing_bids:
                  type: array
                  items:
                    type: object
                  description: Array of losing bid information
      responses:
        '200':
          description: Auction completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Auction completed successfully
                  winner_id:
                    type: integer
                  gacha_id:
                    type: integer
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
                    example: Internal server error

  /update_collection:
    post:
      tags: ['User']
      summary: Update collection after auction completion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - winner_id
                - piece_id
                - final_price
                - seller_id
              properties:
                winner_id:
                  type: integer
                  description: ID of the winning player
                piece_id:
                  type: integer
                  description: ID of the piece being collected
                final_price:
                  type: number
                  description: Final auction price
                seller_id:
                  type: integer
                  description: ID of the seller
      responses:
        '200':
          description: Collection updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string

  /player/collection/update:
    post:
      tags: ['User']
      summary: Update player's collection
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - pieces_id
              properties:
                user_id:
                  type: integer
                  description: ID of the player
                pieces_id:
                  type: array
                  items:
                    type: integer
                  description: Array of piece IDs to add to collection
      responses:
        '200':
          description: Collection updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: string
                  user_id:
                    type: integer
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
                    example: Authorization header missing
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
  /player/collection/update/secret:
    post:
      tags: ['User']
      summary: Update player collection with API key authentication
      parameters:
        - name: X-API-Key
          in: header
          required: true
          schema:
            type: string
          description: API key for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - pieces_id
              properties:
                user_id:
                  type: integer
                  description: ID of the player
                pieces_id:
                  type: array
                  items:
                    type: integer
                  description: Array of piece IDs to add to collection
      responses:
        '200':
          description: Collection updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: string
                  user_id:
                    type: integer
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '403':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
                    example: Invalid or missing API key
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /user/balance/{user_id}:
    get:
      tags: ['User']
      summary: Get user's token balance
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        '200':
          description: Successfully retrieved balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  balance:
                    type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string

  /user/has_piece/{user_id}/{piece_id}:
    get:
      tags: ['User']
      summary: Check if user owns a specific piece
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user
        - name: piece_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the piece to check
      responses:
        '200':
          description: Successfully checked piece ownership
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  has_piece:
                    type: boolean
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string

  /admin/logs:
    get:
      tags: ['User']
      summary: Get latest system logs
      responses:
        '200':
          description: Successfully retrieved logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  rsp:
                    type: array
                    items:
                      type: object
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /player/all:
    get:
      tags: ['User']
      summary: Get all players information
      responses:
        '200':
          description: Successfully retrieved all players
          content:
            application/json:
              schema:
                type: object
                properties:
                  players:
                    type: array
                    items:
                      type: object
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /admin/user/modify/{user_id}:
    put:
      tags: ['User']
      summary: Modify user information
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to modify
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  description: New username for the user
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User updated successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
                    example: Username required
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
                    example: Failed to connect to authentication service

  /admin/player/transaction/history/{player_id}:
    get:
      tags: ['User']
      summary: Get player's transaction history
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the player
      responses:
        '200':
          description: Successfully retrieved transaction history
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions_history:
                    type: array
                    items:
                      type: object
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /admin/player/market-history/{user_id}:
    get:
      tags: ['User']
      summary: Get player's market history
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        '200':
          description: Successfully retrieved market history
          content:
            application/json:
              schema:
                type: object
                properties:
                  market_history:
                    type: array
                    items:
                      type: object
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /max_user_id:
    get:
      tags: ['User']
      summary: Get the current maximum user ID
      responses:
        '200':
          description: Successfully retrieved maximum user ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  max_id:
                    type: integer
                    description: Current maximum user ID in the system
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
  /create_auction:
    post:
      tags: ['Auction']
      summary: Create a new auction
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - seller_id
                - piece_id
                - start_price
                - duration_hours
              properties:
                seller_id:
                  type: integer
                  description: ID of the seller
                piece_id:
                  type: integer
                  description: ID of the piece being auctioned
                start_price:
                  type: number
                  format: float
                  description: Starting price of the auction
                duration_hours:
                  type: number
                  format: float
                  description: Duration of the auction in hours
      responses:
        '201':
          description: Auction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  auction_id:
                    type: integer
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /auction/{auction_id}:
    get:
      tags: ['Auction']
      summary: Get specific auction information
      parameters:
        - name: auction_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the auction
      responses:
        '200':
          description: Successfully retrieved auction information
          content:
            application/json:
              schema:
                type: object
                properties:
                  auction_id:
                    type: integer
                  seller_id:
                    type: integer
                  piece_id:
                    type: integer
                  start_price:
                    type: number
                  current_price:
                    type: number
                  end_time:
                    type: integer
                  status:
                    type: string
                  winner_id:
                    type: integer
                  created_at:
                    type: string
                  bid_count:
                    type: integer
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /bid/{auction_id}:
    post:
      tags: ['Auction']
      summary: Place a bid on an auction
      parameters:
        - name: auction_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the auction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bidder_id
                - bid_amount
              properties:
                bidder_id:
                  type: integer
                  description: ID of the bidder
                bid_amount:
                  type: number
                  format: float
                  description: Amount of the bid
      responses:
        '200':
          description: Bid placed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '404':
          description: Auction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /running/all:
    get:
      tags: ['Auction']
      summary: Get all active auctions
      responses:
        '200':
          description: Successfully retrieved active auctions
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      type: object
                      properties:
                        auction_id:
                          type: integer
                        seller_id:
                          type: integer
                        piece_id:
                          type: integer
                        current_price:
                          type: number
                        end_time:
                          type: integer
                        bid_count:
                          type: integer
                        best_bidder_id:
                          type: integer
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /history:
    get:
      tags: ['Auction']
      summary: Get historical auctions
      responses:
        '200':
          description: Successfully retrieved past auctions
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      type: object
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /running/{piece_id}:
    get:
      tags: ['Auction']
      summary: Get active auctions for a specific piece
      parameters:
        - name: piece_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the piece
      responses:
        '200':
          description: Successfully retrieved active auctions for piece
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      type: object
                      properties:
                        auction_id:
                          type: integer
                        seller_id:
                          type: integer
                        piece_id:
                          type: integer
                        current_price:
                          type: number
                        end_time:
                          type: integer
                        bid_count:
                          type: integer
                        best_bidder_id:
                          type: integer
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string

  /modify/{auction_id}:
    put:
      tags: ['Auction']
      summary: Modify auction end time
      parameters:
        - name: auction_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the auction to modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - seller_id
              properties:
                seller_id:
                  type: integer
                  description: ID of the seller
      responses:
        '200':
          description: Auction modified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
                    
  /banner/{banner_id}:
    get:
      tags: ['Banner']
      summary: Get banner information
      parameters:
        - name: banner_id
          in: path
          required: true
          schema:
            type: integer
            
      responses:
        '200':
          description: Banner details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  cost:
                    type: integer
                  pieces_num:
                    type: integer
                  pic:
                    type: string
                  rates:
                    type: object
                    properties:
                      common:
                        type: number
                      rare:
                        type: number
                      super_rare:
                        type: number
        '404':
          description: Banner not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          
    put:
      tags: ['Banner']
      summary: Update a banner
      parameters:
        - name: banner_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Banner update details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cost:
                  type: integer
                pieces_num:
                  type: integer
                pic:
                  type: string
                rates:
                  type: object
                  properties:
                    common:
                      type: number
                    rare:
                      type: number
                    super_rare:
                      type: number
                      
      responses:
        '200':
          description: Banner updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Attributes invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Banner not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '415':
          description: Unsupported media type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    delete:
      tags: ['Banner']
      summary: Delete a banner
      parameters:
        - name: banner_id
          in: path
          required: true
          schema:
            type: string
            
      responses:
        '200':
          description: Banner deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Banner not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /banner:
    post:
      tags: ['Banner']
      summary: Add a new banner
      requestBody:
        description: New banner details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cost:
                  type: integer
                pieces_num:
                  type: integer
                pic:
                  type: string
                rates:
                  type: object
                  properties:
                    common:
                      type: number
                    rare:
                      type: number
                    super_rare:
                      type: number
      responses:
        '201':
          description: Banner created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Attributes not found or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '415':
          description: Unsupported media type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /banner/pull/{banner_id}:
    get:
      tags: ['Banner']
      summary: Pull from a banner
      parameters:
        - name: banner_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Banner pulled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  pieces:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        grade:
                          type: string
                        value:
                          type: integer
                        pic:
                          type: string
        '401':
          description: Login required
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Insufficient amount of gold
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /piece:
    get:
      tags: ['Piece']
      summary: List all pieces
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: List of all pieces
          content:
            application/json:
              schema:
                type: object
                properties:
                  pieces:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        grade:
                          type: string
                        value:
                          type: integer
                        pic:
                          type: string
        '400':
          description: Attribute 'piece_id' not found or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Piece not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          
    post:
      tags: ['Piece']
      summary: Add a new piece
      requestBody:
        description: New piece details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                grade:
                  type: string
                value:
                  type: integer
                pic:
                  type: string

      responses:
        '201':
          description: Piece created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Attributes not found or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '415':
          description: Unsupported media type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          
  /piece/{piece_id}:
    put:
      tags: ['Piece']
      summary: Update a piece
      parameters:
        - name: piece_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Piece update details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                grade:
                  type: string
                value:
                  type: integer
                pic:
                  type: string
      responses:
        '200':
          description: Piece updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: No attribute found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Piece not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '415':
          description: Unsupported media type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          
    delete:
      tags: ['Piece']
      summary: Delete a piece
      parameters:
        - name: piece_id
          in: path
          required: true
          schema:
            type: string
        
      responses:
        '200':
          description: Piece deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Piece not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /piece/all:
    get:
      summary: Get all pieces
      responses:
        '200':
          description: List of all pieces
          content:
            application/json:
              schema:
                type: object
                properties:
                  pieces:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        grade:
                          type: string
                        value:
                          type: integer
                        pic:
                          type: string
        '500':
          description: Internal server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string