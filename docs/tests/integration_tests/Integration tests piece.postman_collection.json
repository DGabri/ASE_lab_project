{
	"info": {
		"_postman_id": "34597b3e-735d-4ec2-9f06-5168e7a515c9",
		"name": "Integration tests piece",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22214390"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login\", function() {",
							"    pm.response.to.have.status(200)",
							"    const jsonData = pm.response.json()",
							"    ",
							"    if (jsonData.access_token) {",
							"        pm.collectionVariables.set(\"access_token\", jsonData.access_token)",
							"    }",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"ChessHeroes2024@\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/auth/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add King - 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add King - 201\", function() {",
							"    pm.response.to.have.status(201)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"piece_id\": 7",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"The king (♔, ♚) is the most important piece in the game of chess. It may move to any adjoining square; it may also perform, in tandem with the rook, a special move called castling. If a player's king is threatened with capture, it is said to be in check, and the player must remove the threat of capture immediately. If this cannot be done, the king is said to be in checkmate, resulting in a loss for that player. A player cannot make any move that places their own king in check. Despite this, the king can become a strong offensive piece in the endgame or, rarely, the middlegame.\",\n    \"grade\": \"SR\",\n    \"name\": \"King\",\n    \"pic\": \"king\",\n    \"value\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Queen - 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Queen - 201\", function() {",
							"    pm.response.to.have.status(201)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"piece_id\": 8",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"The queen (♕, ♛) is the most powerful piece in the game of chess. It can move any number of squares vertically, horizontally or diagonally, combining the powers of the rook and bishop. Each player starts the game with one queen, placed in the middle of the first rank next to the king. Because the queen is the strongest piece, a pawn is promoted to a queen in the vast majority of cases.\",\n    \"grade\": \"SR\",\n    \"name\": \"Queen\",\n    \"pic\": \"queen\",\n    \"value\": 9\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Rook - 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Rook - 201\", function() {",
							"    pm.response.to.have.status(201)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"piece_id\": 9",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\n    \"description\": \"The rook (/rʊk/; ♖, ♜) is a piece in the game of chess. It may move any number of squares horizontally or vertically without jumping, and it may capture an enemy piece on its path; it may participate in castling. Each player starts the game with two rooks, one in each corner on their side of the board.\",\n    \"grade\": \"R\",\n    \"name\": \"Rook\",\n    \"pic\": \"rook\",\n    \"value\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Knight - 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Knight - 201\", function() {",
							"    pm.response.to.have.status(201)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"piece_id\": 10",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"The knight (♘, ♞) is a piece in the game of chess, represented by a horse's head and neck. It moves two squares vertically and one square horizontally, or two squares horizontally and one square vertically, jumping over other pieces. Each player starts the game with two knights on the b- and g-files, each located between a rook and a bishop.\",\n    \"grade\": \"R\",\n    \"name\": \"Knight\",\n    \"pic\": \"knight\",\n    \"value\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Bishop - 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Bishop - 201\", function() {",
							"    pm.response.to.have.status(201)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"piece_id\": 11",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"The bishop (♗, ♝) is a piece in the game of chess. It moves and captures along diagonals without jumping over interfering pieces. Each player begins the game with two bishops. The starting squares are c1 and f1 for White's bishops, and c8 and f8 for Black's bishops.\",\n    \"grade\": \"R\",\n    \"name\": \"Bishop\",\n    \"pic\": \"bishop\",\n    \"value\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Pawn - 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Pawn - 201\", function() {",
							"    pm.response.to.have.status(201)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"piece_id\": 12",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"The pawn (♙, ♟) is the most numerous and weakest piece in the game of chess. It may move one square directly forward, it may move two squares directly forward on its first move, and it may capture one square diagonally forward. Each player begins a game with eight pawns, one on each square of their second rank. The white pawns start on a2 through h2; the black pawns start on a7 through h7.\",\n    \"grade\": \"C\",\n    \"name\": \"Pawn\",\n    \"pic\": \"pawn\",\n    \"value\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get King - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get King - 200\", function() {",
							"    pm.response.to.have.status(200)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"pieces\": [",
							"            {",
							"                \"description\": \"The king (♔, ♚) is the most important piece in the game of chess. It may move to any adjoining square; it may also perform, in tandem with the rook, a special move called castling. If a player's king is threatened with capture, it is said to be in check, and the player must remove the threat of capture immediately. If this cannot be done, the king is said to be in checkmate, resulting in a loss for that player. A player cannot make any move that places their own king in check. Despite this, the king can become a strong offensive piece in the endgame or, rarely, the middlegame.\",",
							"                \"grade\": \"SR\",",
							"                \"id\": 1,",
							"                \"name\": \"King\",",
							"                \"pic\": \"king\",",
							"                \"value\": 0",
							"            }",
							"        ]",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"host": true,
					"user-agent": true,
					"accept-encoding": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece?id=1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update King - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update King - 200\", function() {",
							"    pm.response.to.have.status(200)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"message\": \"Piece updated.\"",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"grade\": \"C\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete King - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete King - 200\", function() {",
							"    pm.response.to.have.status(200)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"message\": \"Piece deleted.\"",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all pieces - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all pieces - 200\", function() {",
							"    pm.response.to.have.status(200)",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData).to.have.property('pieces')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:3001/piece/piece/all",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add King - 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add King - 400\", function() {",
							"    pm.response.to.have.status(400)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"message\": \"Attributes not found or invalid.\"",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"The king (♔, ♚) is the most important piece in the game of chess. It may move to any adjoining square; it may also perform, in tandem with the rook, a special move called castling. If a player's king is threatened with capture, it is said to be in check, and the player must remove the threat of capture immediately. If this cannot be done, the king is said to be in checkmate, resulting in a loss for that player. A player cannot make any move that places their own king in check. Despite this, the king can become a strong offensive piece in the endgame or, rarely, the middlegame.\",\n    \"grade\": \"SR\",\n    \"name\": \"King\",\n    \"pic\": \"king\",\n    \"value\": -1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get piece - 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get King - 404\", function() {",
							"    pm.response.to.have.status(404)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"message\": \"No pieces found.\"",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece?id=1000",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece"
					],
					"query": [
						{
							"key": "id",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update King - 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update King - 400\", function() {",
							"    pm.response.to.have.status(400)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"message\": \"Attributes invalid.\"",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"grade\": \"UC\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3001/piece/piece/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a piece - 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete a piece - 404\", function() {",
							"    pm.response.to.have.status(404)",
							"    var jsonData = pm.response.json()",
							"",
							"    pm.expect(jsonData).to.eql({",
							"        \"message\": \"No piece found.\"",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:3001/piece/piece/1000",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"piece",
						"piece",
						"1000"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": ""
		}
	]
}